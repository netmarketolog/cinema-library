{"mappings":"YAAA,IAAMA,EACG,cADHA,EAEE,aAGFC,EAAeC,SAASC,cAAc,iBACtCC,EAAOF,SAASC,cAAc,QAgBpC,SAASE,EAAYC,EAAUC,GAC7BH,EAAKI,UAAUC,IAAIH,GACnBF,EAAKI,UAAUE,OAAOH,GACtBI,aAAaC,QAAQ,QAASN,GAZ1BK,aAAaE,QAAQ,WAAab,GACpCC,EAAaa,SAAU,EACvBT,EAAYL,EAAYA,KAExBC,EAAaa,SAAU,EACvBT,EAAYL,EAAaA,IAR7BC,EAAac,iBAAiB,UAkB9B,SAAwBC,GAClBA,EAAIC,OAAOH,QACbT,EAAYL,EAAYA,GAExBK,EAAYL,EAAaA,MChC7B,IAAMkB,EAAWhB,SAASC,cAAc,cAClCgB,EAAqBjB,SAASC,cAAc,2BAC5CiB,EAAaD,EAAmBE,iBA0BtC,SAASC,IACP,OAAOC,OAAOC,aAAetB,SAASuB,gBAAgBC,UC7BzC,SAAAC,IAiBb,MAhBa,CACXC,iBAAkB1B,SAASC,cAAc,oBACzC0B,QAAS3B,SAASC,cAAc,YAChC2B,QAAS5B,SAASC,cAAc,kBAChC4B,QAAS7B,SAASC,cAAc,eAChC6B,WAAY9B,SAASC,cAAc,2BACnC8B,SAAU/B,SAASC,cAAc,yBACjC+B,YAAahC,SAASC,cAAc,oBACpCgC,KAAMjC,SAASC,cAAc,QAC7BiC,cAAelC,SAASC,cAAc,qBACtCkC,gBAAiBnC,SAASC,cAAc,uBACxCmC,YAAapC,SAASC,cAAc,kBACpCoC,iBAAkBrC,SAASC,cAAc,mCACzCqC,kBAAmBtC,SAASC,cAAc,oCAC1CsC,aAAcvC,SAASC,cAAc,mBDVzCgB,EAAmBuB,MAAMC,gBAAkB,GAAiBC,OAAdxB,EAAW,KAAcwB,OAAXxB,GAC5DD,EAAmBuB,MAAMG,WAAa,yBAEtC3B,EAASH,iBAAiB,SAG1B,WACEQ,OAAOuB,SAAS,CACdC,IAAK,EACLC,SAAU,cALdzB,OAAOR,iBAAiB,UASxB,WAeQkC,EAAS/C,SAASuB,gBAAgByB,aAAe3B,OAAO4B,YACxDC,EAAahC,EAAaE,IAAoBF,EAAc6B,OAElE9B,EAAmBuB,MAAMW,iBAAmBD,GAfxC9B,KAlBS,IAmBXJ,EAASV,UAAUC,IAAI,qBAEvBS,EAASV,UAAUE,OAAO,qBAQ9B,IACQuC,EACAG,KEjCR,IAAME,EAAO3B,ICCAA,IAGRK,WAAWjB,iBAAiB,SAiBjC,WACI,IAAMwC,EAAY5C,aAAaE,QAAQ,YACpB2C,KAAKC,MAAMF,GACHG,KAAI,SAAAC,GAlBnC,IACUC,EACAC,EADAD,EAAU,mCACVC,EAAM,sCAAoDjB,OAiBlDe,EAjBuC,aAAmBf,OAARgB,GACzDE,MAAMD,GAAKE,MAAK,SAAAC,GACnB,OAAOA,EAASC,UAEfF,MAAK,SAAAG,GDXC,IAAqBC,ECYxBC,QAAQC,IAAIH,GDZYC,ECaZD,EDZpBE,QAAQC,IAAIF,GACZb,EAAK1B,iBAAiB0C,mBACd,aACA,6BAGuC1B,OAHVuB,EAAKI,GAAG,6HAQb3B,OALeuB,EAAKK,YAAY,uIAOX5B,OAFrBuB,EAAKM,eAAe,sGAMd7B,OAJeuB,EAAKO,aAAaC,MAC3D,EACA,GACF,kDACyD/B,OAA7BuB,EAAKS,aAAaC,QAAQ,GAAG,yDCH9DC,OAAM,SAAAC,GACHX,QAAQC,IAAIU,Y","sources":["src/js/theme-switch.js","src/js/scroll-to-top.js","src/js/getRefs.js","src/js/local-storage/libraryCard.js","src/js/local-storage/libraryStorage.js"],"sourcesContent":["const theme = {\n  LIGHT: 'light-theme',\n  DARK: 'dark-theme',\n};\n\nconst toggleSwitch = document.querySelector('#theme-switch');\nconst body = document.querySelector('body');\n\ndefaultTheme();\n\ntoggleSwitch.addEventListener('change', onToggleSwitch);\n\nfunction defaultTheme() {\n  if (localStorage.getItem('THEME') === theme.DARK) {\n    toggleSwitch.checked = true;\n    classChange(theme.DARK, theme.LIGHT);\n  } else {\n    toggleSwitch.checked = false;\n    classChange(theme.LIGHT, theme.DARK);\n  }\n}\n\nfunction classChange(addClass, removeClass) {\n  body.classList.add(addClass);\n  body.classList.remove(removeClass);\n  localStorage.setItem('THEME', addClass);\n}\n\nfunction onToggleSwitch(evt) {\n  if (evt.target.checked) {\n    classChange(theme.DARK, theme.LIGHT);\n  } else {\n    classChange(theme.LIGHT, theme.DARK);\n  }\n}\n","const scrollUp = document.querySelector('.scroll-up');\nconst scrollUpSirclePath = document.querySelector('.scroll-up__sircle-path');\nconst pathLength = scrollUpSirclePath.getTotalLength();\nconst offset = 100;\n\nscrollUpSirclePath.style.strokeDasharray = `${pathLength} ${pathLength}`;\nscrollUpSirclePath.style.transition = 'stroke-dashoffset 20ms';\n\nscrollUp.addEventListener('click', onScrollUp);\nwindow.addEventListener('scroll', onWindowScroll);\n\nfunction onScrollUp() {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n}\n\nfunction onWindowScroll() {\n  updateDashoffset();\n\n  if (getScrollValue() >= offset) {\n    scrollUp.classList.add('scroll-up--active');\n  } else {\n    scrollUp.classList.remove('scroll-up--active');\n  }\n}\n\nfunction getScrollValue() {\n  return window.pageYOffset || document.documentElement.scrollTop;\n}\n\nfunction updateDashoffset() {\n  const height = document.documentElement.scrollHeight - window.innerHeight;\n  const dashoffset = pathLength - (getScrollValue() * pathLength) / height;\n\n  scrollUpSirclePath.style.strokeDashoffset = dashoffset;\n}\n","export default function getRefs() {\n  const refs = {\n    popularFilmsList: document.querySelector('.container__main'),\n    spinner: document.querySelector('.spinner'),\n    modalEl: document.querySelector('.backdrop-film'),\n    movieEl: document.querySelector('.card__item'),\n    watchedBtn: document.querySelector('[data-action=\"watched\"]'),\n    queueBtn: document.querySelector('[data-action=\"queue\"]'),\n    modalRendEl: document.querySelector('.film__container'),\n    body: document.querySelector('body'),\n    addToQueueBtn: document.querySelector(\"[data-addToQueue]\"),\n    addToWatchedBtn: document.querySelector(\"[data-addToWatched]\"),\n    modalTeamEl: document.querySelector('.backdrop-team'),\n    modalTeamOpenBtn: document.querySelector('[data-action=\"team-open-modal\"]'),\n    modalTeamCloseBtn: document.querySelector('[data-action=\"team-close-modal\"]'),\n    paginationEl: document.querySelector('.pagination ul'),\n  };\n  return refs;\n}\n","import getRefs from '../getRefs';\nconst refs = getRefs();\nexport default function filmsMarkup(film) { \n    console.log(film)\n    refs.popularFilmsList.insertAdjacentHTML(\n            'afterbegin',\n            `<li class=\"card__item\" id=${film.id}>\n        <a class=\"card__link\" id=\"429473\" href=\"#\">\n          <img\n            src=\"https://image.tmdb.org/t/p/w500/${film.poster_path}\"\n            alt=\"{$}{film.original_title}\"\n            class=\"card__poster\"\n          />\n\n          <h2 class=\"card__title\">${film.original_title}</h2>\n          <div class=\"card__wrap\">\n            <p class=\"card__description\">{$}{genres} | ${film.release_date.slice(\n                0,\n                4\n            )}</p>\n            <p class=\"card__rating\"></p>${film.vote_average.toFixed(1)}</p>\n          </div>\n        </a>\n      </li>`\n        );\n    }\n//     return film.map(({ id, poster_path, original_title, release_date, vote_average }) => {\n//         refs.popularFilmsList.insertAdjacentHTML(\n//             'afterbegin',\n//             `<li class=\"card__item\" id=${id}>\n//         <a class=\"card__link\" id=\"429473\" href=\"#\">\n//           <img\n//             src=\"https://image.tmdb.org/t/p/w500/${poster_path}\"\n//             alt=\"{$}{film.original_title}\"\n//             class=\"card__poster\"\n//           />\n\n//           <h2 class=\"card__title\">${original_title}</h2>\n//           <div class=\"card__wrap\">\n//             <p class=\"card__description\">{$}{genres} | ${release_date.slice(\n//                 0,\n//                 4\n//             )}</p>\n//             <p class=\"card__rating\"></p>${vote_average.toFixed(1)}</p>\n//           </div>\n//         </a>\n//       </li>`\n//         );\n//     }).join('');\n// }","import filmsMarkup from \"./libraryCard\";\nimport getRefs from \"../getRefs\";\nconst refs = getRefs();\n\n\nrefs.watchedBtn.addEventListener('click', onWatchedVideo)\n\nfunction fetcMuvie(id) {\n    const API_KEY = '8fa17eefa9c2b424e1a30217c39bc412';\n    const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`;\n    return fetch(url).then(response => {\n        return response.json();\n    })\n        .then(data => {\n            console.log(data);\n            filmsMarkup(data)\n        })\n        .catch(error => {\n            console.log(error);\n        })\n}\n\nfunction onWatchedVideo() {\n    const savedFilm = localStorage.getItem(\"settings\");\n    const parsedFilm = JSON.parse(savedFilm);\n    const massmap = parsedFilm.map(muvieId => {\n        fetcMuvie(muvieId);\n        \n    });\n    \n    \n}\n// function onmuvieVideo(data) {\n//     console.log(data)\n// }\n        \n// onmuvieVideo()"],"names":["$8bc6ab253d5b4cd3$var$theme","$8bc6ab253d5b4cd3$var$toggleSwitch","document","querySelector","$8bc6ab253d5b4cd3$var$body","$8bc6ab253d5b4cd3$var$classChange","addClass","removeClass","classList","add","remove","localStorage","setItem","getItem","checked","addEventListener","evt","target","$6325c7dcddb2ec4f$var$scrollUp","$6325c7dcddb2ec4f$var$scrollUpSirclePath","$6325c7dcddb2ec4f$var$pathLength","getTotalLength","$6325c7dcddb2ec4f$var$getScrollValue","window","pageYOffset","documentElement","scrollTop","$f4f3035a18194e6a$export$2e2bcd8739ae039","popularFilmsList","spinner","modalEl","movieEl","watchedBtn","queueBtn","modalRendEl","body","addToQueueBtn","addToWatchedBtn","modalTeamEl","modalTeamOpenBtn","modalTeamCloseBtn","paginationEl","style","strokeDasharray","concat","transition","scrollTo","top","behavior","height","scrollHeight","innerHeight","dashoffset","strokeDashoffset","$4fff3928fc450e59$var$refs","savedFilm","JSON","parse","map","muvieId","API_KEY","url","fetch","then","response","json","data","film","console","log","insertAdjacentHTML","id","poster_path","original_title","release_date","slice","vote_average","toFixed","catch","error"],"version":3,"file":"my-library.d607dc98.js.map"}